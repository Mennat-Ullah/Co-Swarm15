/* Auto-generated by genmsg_cpp for file /home/ros/dev/rosbook/chapter7_tutorials/srv/Neighbor.srv */
#ifndef CHAPTER7_TUTORIALS_SERVICE_NEIGHBOR_H
#define CHAPTER7_TUTORIALS_SERVICE_NEIGHBOR_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace chapter7_tutorials
{
template <class ContainerAllocator>
struct NeighborRequest_ {
  typedef NeighborRequest_<ContainerAllocator> Type;

  NeighborRequest_()
  {
  }

  NeighborRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct NeighborRequest
typedef  ::chapter7_tutorials::NeighborRequest_<std::allocator<void> > NeighborRequest;

typedef boost::shared_ptr< ::chapter7_tutorials::NeighborRequest> NeighborRequestPtr;
typedef boost::shared_ptr< ::chapter7_tutorials::NeighborRequest const> NeighborRequestConstPtr;


template <class ContainerAllocator>
struct NeighborResponse_ {
  typedef NeighborResponse_<ContainerAllocator> Type;

  NeighborResponse_()
  : Neighbor00(0)
  , Neighbor01(0)
  , Neighbor02(0)
  , Neighbor10(0)
  , Neighbor11(0)
  , Neighbor12(0)
  , Neighbor20(0)
  , Neighbor21(0)
  , Neighbor22(0)
  {
  }

  NeighborResponse_(const ContainerAllocator& _alloc)
  : Neighbor00(0)
  , Neighbor01(0)
  , Neighbor02(0)
  , Neighbor10(0)
  , Neighbor11(0)
  , Neighbor12(0)
  , Neighbor20(0)
  , Neighbor21(0)
  , Neighbor22(0)
  {
  }

  typedef int32_t _Neighbor00_type;
  int32_t Neighbor00;

  typedef int32_t _Neighbor01_type;
  int32_t Neighbor01;

  typedef int32_t _Neighbor02_type;
  int32_t Neighbor02;

  typedef int32_t _Neighbor10_type;
  int32_t Neighbor10;

  typedef int32_t _Neighbor11_type;
  int32_t Neighbor11;

  typedef int32_t _Neighbor12_type;
  int32_t Neighbor12;

  typedef int32_t _Neighbor20_type;
  int32_t Neighbor20;

  typedef int32_t _Neighbor21_type;
  int32_t Neighbor21;

  typedef int32_t _Neighbor22_type;
  int32_t Neighbor22;


  typedef boost::shared_ptr< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct NeighborResponse
typedef  ::chapter7_tutorials::NeighborResponse_<std::allocator<void> > NeighborResponse;

typedef boost::shared_ptr< ::chapter7_tutorials::NeighborResponse> NeighborResponsePtr;
typedef boost::shared_ptr< ::chapter7_tutorials::NeighborResponse const> NeighborResponseConstPtr;

struct Neighbor
{

typedef NeighborRequest Request;
typedef NeighborResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Neighbor
} // namespace chapter7_tutorials

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "chapter7_tutorials/NeighborRequest";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d47fa38754d7599b78e284b89c882f63";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd47fa38754d7599bULL;
  static const uint64_t static_value2 = 0x78e284b89c882f63ULL;
};

template<class ContainerAllocator>
struct DataType< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "chapter7_tutorials/NeighborResponse";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 Neighbor00\n\
int32 Neighbor01\n\
int32 Neighbor02\n\
int32 Neighbor10\n\
int32 Neighbor11\n\
int32 Neighbor12\n\
int32 Neighbor20\n\
int32 Neighbor21\n\
int32 Neighbor22\n\
\n\
\n\
";
  }

  static const char* value(const  ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::chapter7_tutorials::NeighborRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct NeighborRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::chapter7_tutorials::NeighborResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.Neighbor00);
    stream.next(m.Neighbor01);
    stream.next(m.Neighbor02);
    stream.next(m.Neighbor10);
    stream.next(m.Neighbor11);
    stream.next(m.Neighbor12);
    stream.next(m.Neighbor20);
    stream.next(m.Neighbor21);
    stream.next(m.Neighbor22);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct NeighborResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<chapter7_tutorials::Neighbor> {
  static const char* value() 
  {
    return "d47fa38754d7599b78e284b89c882f63";
  }

  static const char* value(const chapter7_tutorials::Neighbor&) { return value(); } 
};

template<>
struct DataType<chapter7_tutorials::Neighbor> {
  static const char* value() 
  {
    return "chapter7_tutorials/Neighbor";
  }

  static const char* value(const chapter7_tutorials::Neighbor&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<chapter7_tutorials::NeighborRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d47fa38754d7599b78e284b89c882f63";
  }

  static const char* value(const chapter7_tutorials::NeighborRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<chapter7_tutorials::NeighborRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "chapter7_tutorials/Neighbor";
  }

  static const char* value(const chapter7_tutorials::NeighborRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<chapter7_tutorials::NeighborResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d47fa38754d7599b78e284b89c882f63";
  }

  static const char* value(const chapter7_tutorials::NeighborResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<chapter7_tutorials::NeighborResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "chapter7_tutorials/Neighbor";
  }

  static const char* value(const chapter7_tutorials::NeighborResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // CHAPTER7_TUTORIALS_SERVICE_NEIGHBOR_H

